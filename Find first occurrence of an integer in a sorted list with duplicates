
Given a sorted list of integers, find the position of first occurrence of a given number K in this list in O(log n) time.

Input

First line of input will contain a positive integer T = number of test cases. Each test case will contain two lines. First line will contain two positive integer N = number of elements in list and K. Next line will contain N space separated integers in increasing order.

Output

For each test case, print on a single line the index of first occurrence of K in the list on 0-based index. Print -1 if you cannot find K in the list.
Sample Input

3
10 4
1 2 4 4 4 4 5 8 9 10
15 7
1 2 3 3 5 6 7 7 7 7 7 8 8 8 8
9 1
-5 -4 -3 -2 -1 0 0 0 1
Sample Output

2
6
8

import java.util.Scanner;
// Other imports go here
// Do NOT change the class name
class Main{
    public static void main(String[] args)
    {
        // Write your code here
              boolean test = false;
        Scanner sc = new Scanner(System.in);
        int Testcase = sc.nextInt();
        for (int q =0; q< Testcase;q++){
            int num = sc.nextInt();
            int key = sc.nextInt();
            int[] arr = new int[num];
            for (int i = 0; i < num; i++) {
                arr[i] = sc.nextInt();
            }
            int i=0;
            for (i=0; i<num; i++){
                if (key == arr[i]){
                    System.out.println(i);
                    break;
                }
            }
            for (int element : arr) {
                if (element == key) {
                    test = true;
                    break;
                }
            }
            if(test == false){
                System.out.println(-1);

            }
        }
    }
}
